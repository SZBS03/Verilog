$date
	Fri Sep 27 17:47:13 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module register_tb $end
$var wire 33 ! read_data2 [32:0] $end
$var wire 33 " read_data1 [32:0] $end
$var reg 1 # clk $end
$var reg 1 $ enable $end
$var reg 5 % rd_data [4:0] $end
$var reg 1 & reset $end
$var reg 5 ' rs1_data [4:0] $end
$var reg 5 ( rs2_data [4:0] $end
$var reg 32 ) write_data [31:0] $end
$scope module u_register $end
$var wire 1 # clk $end
$var wire 1 $ enable $end
$var wire 5 * rd_data [4:0] $end
$var wire 1 & reset $end
$var wire 5 + rs1_data [4:0] $end
$var wire 5 , rs2_data [4:0] $end
$var wire 32 - write_data [31:0] $end
$var wire 33 . read_data2 [32:0] $end
$var wire 33 / read_data1 [32:0] $end
$var integer 32 0 i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 0
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx .
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
0&
bx %
0$
0#
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx !
$end
#5
b100000 0
1&
1#
#10
b0 !
b0 .
b0 "
b0 /
b1001 (
b1001 ,
b1000 '
b1000 +
b1000 %
b1000 *
b110110011 )
b110110011 -
0&
1$
0#
#15
b110110011 "
b110110011 /
1#
#20
0#
#25
1#
#30
0#
#35
1#
#40
0#
#45
1#
#50
0#
#55
1#
#60
0#
#65
1#
#70
0#
#75
1#
#80
0#
0$
1&
#85
b0 "
b0 /
b100000 0
1#
#90
0#
#95
b100000 0
1#
#100
0#
#105
b100000 0
1#
#110
0#
#115
b100000 0
1#
#120
0#
#125
b100000 0
1#
#130
0#
#135
b100000 0
1#
#140
0#
#145
b100000 0
1#
#150
0#
#155
b100000 0
1#
#160
0#
#165
b100000 0
1#
#170
0#
#175
b100000 0
1#
#180
0#
