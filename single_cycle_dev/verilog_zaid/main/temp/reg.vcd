$date
	Fri Nov 29 21:05:56 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module register_tb $end
$var wire 32 ! read_data2 [31:0] $end
$var wire 32 " read_data1 [31:0] $end
$var reg 1 # clk $end
$var reg 1 $ enable $end
$var reg 5 % rd_data [4:0] $end
$var reg 1 & reset $end
$var reg 5 ' rs1_data [4:0] $end
$var reg 5 ( rs2_data [4:0] $end
$var reg 32 ) write_data [31:0] $end
$scope module u_register $end
$var wire 1 # clk $end
$var wire 1 $ enable $end
$var wire 5 * rd_data [4:0] $end
$var wire 1 & reset $end
$var wire 5 + rs1_data [4:0] $end
$var wire 5 , rs2_data [4:0] $end
$var wire 32 - write_data [31:0] $end
$var wire 32 . read_data2 [31:0] $end
$var wire 32 / read_data1 [31:0] $end
$var integer 32 0 i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 0
b0 /
bx .
b0 -
b1 ,
b0 +
b0 *
b0 )
b1 (
b0 '
1&
b0 %
0$
0#
b0 "
bx !
$end
#5
b0 !
b0 .
b100000 0
1#
#10
0#
0&
#15
1#
#20
0#
b1101111010101101 )
b1101111010101101 -
b1 %
b1 *
1$
#25
b1101111010101101 !
b1101111010101101 .
1#
#30
0#
#35
1#
#40
0#
1&
#45
b0 !
b0 .
b100000 0
1#
#50
0#
0&
#55
b1101111010101101 !
b1101111010101101 .
1#
#60
b1101111010101101 "
b1101111010101101 /
0#
b1 '
b1 +
#65
1#
#70
0#
#75
1#
#80
0#
#85
1#
#90
0#
#95
1#
#100
0#
#105
1#
#110
0#
