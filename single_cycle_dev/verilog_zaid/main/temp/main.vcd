$date
	Tue Dec  3 14:24:59 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module MAIN_tb $end
$var reg 1 ! RW $end
$var reg 1 " clk $end
$var reg 32 # dataIN [31:0] $end
$var reg 1 $ en $end
$var reg 1 % rst $end
$scope module u_MAIN $end
$var wire 1 ! RW $end
$var wire 1 " clk $end
$var wire 32 & dataIN [31:0] $end
$var wire 1 $ en $end
$var wire 1 % rst $end
$var wire 32 ' write_data [31:0] $end
$var wire 32 ( store_data [31:0] $end
$var wire 5 ) rs2 [4:0] $end
$var wire 5 * rs1 [4:0] $end
$var wire 1 + regWrite $end
$var wire 32 , read_data2 [31:0] $end
$var wire 32 - read_data1 [31:0] $end
$var wire 1 . readWrite $end
$var wire 5 / rd [4:0] $end
$var wire 1 0 operandB $end
$var wire 1 1 operandA $end
$var wire 1 2 memWrite $end
$var wire 1 3 memToReg $end
$var wire 32 4 load_write [31:0] $end
$var wire 32 5 instMemOUT [31:0] $end
$var wire 32 6 imm_gen_inst [31:0] $end
$var wire 32 7 dataMemLoad [31:0] $end
$var wire 5 8 counter_address [4:0] $end
$var wire 32 9 aluOut [31:0] $end
$var wire 6 : aluOP [5:0] $end
$var wire 32 ; PC [31:0] $end
$var wire 32 < OpB [31:0] $end
$var wire 32 = OpA [31:0] $end
$scope module o_register $end
$var wire 1 " clk $end
$var wire 1 % reset $end
$var wire 32 > write_data [31:0] $end
$var wire 5 ? rs2_data [4:0] $end
$var wire 5 @ rs1_data [4:0] $end
$var wire 1 + regWrite $end
$var wire 5 A rd_data [4:0] $end
$var reg 32 B read_data1 [31:0] $end
$var reg 32 C read_data2 [31:0] $end
$var integer 32 D i [31:0] $end
$upscope $end
$scope module u_ControlDecode $end
$var wire 5 E rs2 [4:0] $end
$var wire 5 F rs1 [4:0] $end
$var wire 5 G rd [4:0] $end
$var wire 7 H opcode [6:0] $end
$var wire 32 I instruction [31:0] $end
$var wire 7 J func7 [6:0] $end
$var wire 3 K func3 [2:0] $end
$var reg 6 L aluOP [5:0] $end
$var reg 1 M branch $end
$var reg 32 N imm_gen_inst [31:0] $end
$var reg 1 O jalEN $end
$var reg 1 P jalrEN $end
$var reg 1 3 memToReg $end
$var reg 1 2 memWrite $end
$var reg 1 1 operandA $end
$var reg 1 0 operandB $end
$var reg 1 + regWrite $end
$upscope $end
$scope module u_DMI $end
$var wire 32 Q LW [31:0] $end
$var wire 32 R SW [31:0] $end
$var wire 6 S aluOP [5:0] $end
$var wire 32 T imm [31:0] $end
$var wire 32 U rs2 [31:0] $end
$var wire 32 V load [31:0] $end
$var wire 16 W SH [15:0] $end
$var wire 8 X SB [7:0] $end
$var wire 16 Y LHU [15:0] $end
$var wire 16 Z LH [15:0] $end
$var wire 8 [ LBU [7:0] $end
$var wire 8 \ LB [7:0] $end
$var reg 32 ] load_data [31:0] $end
$var reg 32 ^ store_data [31:0] $end
$upscope $end
$scope module u_RAM2 $end
$var wire 32 _ Immediate [31:0] $end
$var wire 1 " clk $end
$var wire 32 ` dataIN [31:0] $end
$var wire 1 . readWrite $end
$var wire 32 a rs1 [31:0] $end
$var wire 32 b loc [31:0] $end
$var wire 5 c address [4:0] $end
$var reg 32 d dataOUT [31:0] $end
$upscope $end
$scope module u_alu $end
$var wire 32 e a [31:0] $end
$var wire 32 f b [31:0] $end
$var wire 6 g opcode [5:0] $end
$var reg 32 h c [31:0] $end
$upscope $end
$scope module u_fetch $end
$var wire 1 " clk $end
$var wire 1 $ en $end
$var wire 1 % rst $end
$var reg 32 i PC [31:0] $end
$var reg 32 j counterOUT [31:0] $end
$var reg 32 k instruction [31:0] $end
$var reg 5 l mem_address [4:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b11111 l
bx k
b11111111111111111111111111111111 j
b11111111111111111111111111111111 i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bz T
bx S
bx R
bx Q
xP
xO
bx N
xM
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
b11111111111111111111111111111111 ;
bx :
bx 9
b11111 8
bx 7
bx 6
bx 5
bx 4
x3
x2
x1
x0
bx /
x.
bx -
bx ,
x+
bx *
bx )
bx (
bx '
bx &
0%
0$
bx #
1"
x!
$end
#5
0"
#10
1.
b100 c
b0 (
b0 ^
b0 4
b0 ]
b0 `
b100 =
b100 e
b100 b
b0 -
b0 B
b0 a
0O
0P
b101 :
b101 L
b101 S
b101 g
0M
00
11
02
03
1+
b100 )
b100 ?
b100 E
b0 *
b0 @
b0 F
b1 /
b1 A
b1 G
b0 J
b0 K
b10011 H
b100 6
b100 N
b100 _
b10000000000000010010011 5
b10000000000000010010011 I
b10000000000000010010011 k
b0 8
b0 l
b11 ;
b11 j
b11 i
1"
1$
#15
0"
#20
b101 c
b101 =
b101 e
b101 )
b101 ?
b101 E
b10 /
b10 A
b10 G
b101 b
b101 6
b101 N
b101 _
b10100000000000100010011 5
b10100000000000100010011 I
b10100000000000100010011 k
b1 8
b1 l
b111 ;
b111 j
b111 i
1"
#25
0"
#30
bx c
bx 4
bx ]
bx `
b0 9
b0 h
bx b
bx -
bx B
bx a
13
b10 :
b10 L
b10 S
b10 g
11
1+
b11 *
b11 @
b11 F
b100 /
b100 A
b100 G
b10 K
b11 H
b10100011010001000000011 5
b10100011010001000000011 I
b10100011010001000000011 k
b10 8
b10 l
b1011 ;
b1011 j
b1011 i
1"
#35
0"
#40
0.
bx (
bx ^
b0 '
b0 >
12
b10001 :
b10001 L
b10001 S
b10001 g
11
03
0+
b0 =
b0 e
b1 )
b1 ?
b1 E
b1 *
b1 @
b1 F
b11 /
b11 A
b11 G
b100011 H
b0 6
b0 N
b0 _
b100001010000110100011 5
b100001010000110100011 I
b100001010000110100011 k
b11 8
b11 l
b1111 ;
b1111 j
b1111 i
1"
#45
0"
#50
1.
bx =
bx e
b0 :
b0 L
b0 S
b0 g
01
02
bx )
bx ?
bx E
bx *
bx @
bx F
bx /
bx A
bx G
bx J
bx K
bx H
bx 5
bx I
bx k
b100 8
b100 l
b10011 ;
b10011 j
b10011 i
1"
#55
0"
#60
b0 W
b0 X
b0 <
b0 f
b0 R
b0 ,
b0 C
b0 U
b100 '
b100 >
b100 c
b100 =
b100 e
b0 (
b0 ^
b0 4
b0 ]
b0 `
b100 9
b100 h
b100 b
b0 -
b0 B
b0 a
11
1+
b101 :
b101 L
b101 S
b101 g
b100 6
b100 N
b100 _
b100 )
b100 ?
b100 E
b0 *
b0 @
b0 F
b1 /
b1 A
b1 G
b0 J
b0 K
b10011 H
b100000 D
b10000000000000010010011 5
b10000000000000010010011 I
b10000000000000010010011 k
b0 8
b0 l
b0 ;
b0 j
b0 i
1"
1%
#65
0"
0%
#70
b101 '
b101 >
b101 9
b101 h
b101 c
b101 =
b101 e
b101 )
b101 ?
b101 E
b10 /
b10 A
b10 G
b101 b
b101 6
b101 N
b101 _
b10100000000000100010011 5
b10100000000000100010011 I
b10100000000000100010011 k
b1 8
b1 l
b100 ;
b100 j
b100 i
1"
#75
0"
#80
bx '
bx >
bx 4
bx ]
bx `
b0 9
b0 h
13
b10 :
b10 L
b10 S
b10 g
11
1+
b11 *
b11 @
b11 F
b100 /
b100 A
b100 G
b10 K
b11 H
b10100011010001000000011 5
b10100011010001000000011 I
b10100011010001000000011 k
b10 8
b10 l
b1000 ;
b1000 j
b1000 i
1"
#85
0"
#90
0.
b100 W
b100 X
b100 <
b100 f
b100 (
b100 ^
b0 '
b0 >
b100 R
b100 ,
b100 C
b100 U
b100 -
b100 B
b100 a
12
b10001 :
b10001 L
b10001 S
b10001 g
11
03
0+
b100 c
b0 =
b0 e
b1 )
b1 ?
b1 E
b1 *
b1 @
b1 F
b11 /
b11 A
b11 G
b100011 H
b100 b
b0 6
b0 N
b0 _
b100001010000110100011 5
b100001010000110100011 I
b100001010000110100011 k
b11 8
b11 l
b1100 ;
b1100 j
b1100 i
1"
#95
0"
#100
1.
bx W
bx X
bx <
bx f
bx c
bx =
bx e
bx R
bx ,
bx C
bx U
bx b
bx -
bx B
bx a
b0 :
b0 L
b0 S
b0 g
01
02
bx )
bx ?
bx E
bx *
bx @
bx F
bx /
bx A
bx G
bx J
bx K
bx H
bx 5
bx I
bx k
b100 8
b100 l
b10000 ;
b10000 j
b10000 i
1"
#105
0"
#110
b101 8
b101 l
b10100 ;
b10100 j
b10100 i
1"
#115
0"
0$
#120
b11111 8
b11111 l
b11111111111111111111111111111111 ;
b11111111111111111111111111111111 j
b11111111111111111111111111111111 i
1"
#125
0"
#130
1"
#135
0"
#140
1"
#145
0"
#150
1"
#155
0"
#160
1"
#165
0"
#170
1"
#175
0"
#180
1"
#185
0"
#190
1"
#195
0"
#200
1"
#205
0"
#210
1"
#215
0"
