$date
	Fri Nov 29 12:35:04 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module ControlDecoder_tb $end
$var wire 5 ! rs2 [4:0] $end
$var wire 5 " rs1 [4:0] $end
$var wire 1 # regWrite $end
$var wire 5 $ rd [4:0] $end
$var wire 1 % operandB $end
$var wire 1 & operandA $end
$var wire 1 ' memWrite $end
$var wire 1 ( memToReg $end
$var wire 1 ) jalrEN $end
$var wire 1 * jalEN $end
$var wire 32 + imm_gen_inst [31:0] $end
$var wire 1 , branch $end
$var wire 6 - aluOP [5:0] $end
$var reg 32 . instruction [31:0] $end
$scope module u_ControlDecoder $end
$var wire 32 / instruction [31:0] $end
$var wire 5 0 rs2 [4:0] $end
$var wire 5 1 rs1 [4:0] $end
$var wire 5 2 rd [4:0] $end
$var wire 7 3 opcode [6:0] $end
$var wire 7 4 func7 [6:0] $end
$var wire 3 5 func3 [2:0] $end
$var reg 6 6 aluOP [5:0] $end
$var reg 1 , branch $end
$var reg 32 7 imm_gen_inst [31:0] $end
$var reg 1 * jalEN $end
$var reg 1 ) jalrEN $end
$var reg 1 ( memToReg $end
$var reg 1 ' memWrite $end
$var reg 1 & operandA $end
$var reg 1 % operandB $end
$var reg 1 # regWrite $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b100 7
b101 6
b0 5
b0 4
b10011 3
b1 2
b0 1
b100 0
b10000000000000010010011 /
b10000000000000010010011 .
b101 -
0,
b100 +
0*
0)
0(
0'
1&
0%
b1 $
1#
b0 "
b100 !
$end
#20
b101 +
b101 7
b10 $
b10 2
b101 !
b101 0
b10100000000000100010011 .
b10100000000000100010011 /
#40
b10011 -
b10011 6
0&
1#
b0 +
b0 7
b110011 3
b100000 4
b100 $
b100 2
b10 "
b10 1
b1 !
b1 0
b1000000000100010000001000110011 .
b1000000000100010000001000110011 /
#60
b11011 -
b11011 6
1#
b111 5
b0 4
b101 $
b101 2
b100010111001010110011 .
b100010111001010110011 /
#80
1&
b111 -
b111 6
1#
b11 +
b11 7
b10011 3
b10 5
b110 $
b110 2
b1 "
b1 1
b11 !
b11 0
b1100001010001100010011 .
b1100001010001100010011 /
#100
b10101 -
b10101 6
0&
1#
b0 +
b0 7
b110011 3
b11 $
b11 2
b10 "
b10 1
b1 !
b1 0
b100010010000110110011 .
b100010010000110110011 /
#150
